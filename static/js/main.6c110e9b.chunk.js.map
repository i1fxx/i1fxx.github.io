{"version":3,"sources":["components/AppLoading.js","components/AppItem.js","utils/consts.js","pages/MainPage/MainPage.js","pages/NotFound/NotFound.js","components/UnSupport.js","components/MobileAppView/MobileAppView.js","components/DescAppView/DescAppView.js","pages/AppPage/AppPage.js","components/CategoryListItem.js","routes.js","pages/CategoryPage/CategpryPage.js","components/AppRouter.js","components/NavBar.js","components/Footer.js","App.js","store/UserStore.js","store/AppStore.js","index.js","serviceWorkerRegistration.js","store/CategoryStore.js"],"names":["AppLoading","react_default","a","createElement","Dimmer","active","inverted","Loader","inline","AppItem","_ref","info","app_name","app_id","Card","style","width","link","Image","src","concat","wrapped","ui","Content","textAlign","Header","height","overflow","textOverflow","whiteSpace","MainPage","observer","_useState","useState","_useState2","Object","slicedToArray","appList","setAppList","_useContext","useContext","Context","app","user","_useState3","_useState4","loading","setPageLoading","useEffect","document","title","regManifest","_appList","className","components_AppLoading","Fragment","react_router_dom","to","slice","map","data","index","key","as","category_name","apps","length","category_id","Icon","name","Grid","columns","appIndex","Column","minWidth","display","padding","components_AppItem","NotFound","type","category","pageText","setPageText","margin","icon","List","horizontal","Item","Link","_categoryList","cat","catIndex","UnSupport","marginTop","targer","href","MobileView","appInfo","message","installLoading","installHendler","visitSite","CopyToClipboard","copy","setCopy","Segment","maxWidth","color","fontSize","size","header","Message","negative","Button","disabled","critical","_appInstallSupport","onClick","primary","Popup","content","trigger","text","value","onCopy","status","Container","app_description","DescView","Row","centered","AppPage","id","useParams","setAppInfo","pageLoading","_useState5","_useState6","setInstallLoading","_useState7","window","innerWidth","_useState8","pageWidth","setPageWidth","_useState9","_useState10","_useState11","_useState12","setMessage","pageLink","location","localApp","URLSearchParams","search","get","forEach","item","itemIndex","findIndex","x","localStorage","getItem","_appInstalled","addEventListener","setTimeout","messageHandler","components_UnSupport","replace","app_link","asyncToGenerator","_regeneratorRuntime","mark","_callee","wrap","_context","prev","next","_appEvent","prompt","userChoice","sent","outcome","setItem","t0","stop","apply","this","arguments","open","DescAppView_DescAppView","MobileAppView_MobileAppView","pages_NotFound_NotFound","CategoryListItem","borderRadius","paddingLeft","publicRoutes","path","Component","categoryList","setCategoryList","noFound","setNoFoundCategory","categoryIndex","divided","verticalAlign","components_CategoryListItem","AppRouter","react_router","element","exact","NavBar","Menu","Footer","target","rel","marginRight","float","Date","getFullYear","App","setLoading","setSupport","indexOf","osName","browserName","setStatus","matchMedia","matches","setUserLanguadge","navigator","language","userLanguage","split","components_NavBar","components_AppRouter","components_Footer","UserStore","classCallCheck","_userLanguadge","makeAutoObservable","e","url","_this","listener","preventDefault","removeEventListener","getElementById","prettyList","categories","storeApp","__webpack_require__","d","__webpack_exports__","config","createContext","ReactDOM","createRoot","render","Provider","AppStore","CategoryStore","src_App_0","swUrl","serviceWorker","register","then","registration","onupdatefound","installingWorker","installing","onstatechange","state","controller","console","log","onUpdate","onSuccess","catch","error","registerValidSW","process"],"mappings":"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","file":"static/js/main.6c110e9b.chunk.js","sourcesContent":["import React from \"react\";\r\nimport { Dimmer, Loader } from \"semantic-ui-react\";\r\n\r\nlet AppLoading = ()=>{\r\n    return(\r\n        <Dimmer active={true} inverted>\r\n            <Loader inverted inline='centered' />\r\n        </Dimmer>\r\n    );\r\n};\r\n\r\nexport default AppLoading;","import React from \"react\";\r\nimport { Card, Image } from 'semantic-ui-react';\r\nimport { REACT_APP_API_STATIC, REACT_APP_MAIN_URL } from '../utils/consts';\r\n\r\nlet AppItem = ({info})=>{\r\n    let {app_name, app_id} = info;\r\n    return(\r\n        <Card style={{width : '150px'}} link={true}>\r\n            <Image src={`${REACT_APP_MAIN_URL}/${REACT_APP_API_STATIC}app/${app_id}/logo.png`} wrapped ui={false}/>\r\n            <Card.Content textAlign={'center'}>\r\n                <Card.Header style={{height : '23.15px', overflow : 'hidden', textOverflow : 'ellipsis',  whiteSpace: 'nowrap'}}>{app_name}</Card.Header>\r\n            </Card.Content>\r\n        </Card>\r\n    );\r\n};\r\n\r\nexport default AppItem;","export const MAIN_ROUTE = \"/\";\r\nexport const APP_PAGE = \"/app/:id\";\r\nexport const ALL_ROUTE = \"*\";\r\nexport const CATEGORY_PAGE = \"/category/:id\";\r\nexport const REACT_APP_API_URL = \"http://localhost:7000/\";\r\nexport const REACT_APP_MAIN_URL = \"https://i1fxx.github.io/\"\r\nexport const REACT_APP_API_STATIC = \"assets/\";","import React, { useEffect, useState, useContext } from \"react\";\r\nimport { Icon, Grid, Header } from \"semantic-ui-react\";\r\nimport { observer } from \"mobx-react-lite\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { Context } from \"../../index\";\r\nimport AppLoading from \"../../components/AppLoading\";\r\nimport AppItem from \"../../components/AppItem\";\r\nimport \"./MainPage.css\";\r\n\r\nlet MainPage = observer(()=>{\r\n    let [ appList, setAppList ] = useState([]);\r\n    let { app, user } = useContext(Context);\r\n    let [ loading, setPageLoading ] = useState(true);\r\n    \r\n\r\n    useEffect(()=>{\r\n        document.title = \"PwaBox - Главная\";\r\n        user.regManifest('../site.webmanifest');\r\n        setAppList(app._appList);\r\n        setPageLoading(false);\r\n    },[app, user]);\r\n\r\n    return(\r\n        <div className=\"mainPageSegment\">\r\n            {loading && <AppLoading/>}\r\n            {!loading &&\r\n                <>\r\n                    <Link\r\n                        to=\"../category/top-10\"\r\n                    >\r\n                        <div\r\n                            className=\"mainPageImage\"\r\n                        >\r\n                            Топ 10\r\n                        </div>\r\n                    </Link>\r\n                    {appList.slice(1).map((data, index)=>{\r\n                        return <div key={index} className=\"appsList\">\r\n                            <Header\r\n                                className=\"categoryHeader\"\r\n                                as=\"h2\"\r\n                            >\r\n                                {data.category_name}\r\n                            </Header>\r\n                            {data.apps.length > 4 &&\r\n                                <div className=\"allLink\">\r\n                                    <Link\r\n                                        to={`../category/${data.category_id}`}\r\n                                    >\r\n                                        Все&nbsp;\r\n                                        <Icon name=\"arrow right\"/>\r\n                                    </Link>\r\n                                </div>\r\n                            }\r\n                            <Grid\r\n                                className=\"categoryAppList\"\r\n                                columns={4}\r\n                            >\r\n                                {data.apps.slice(0, 4).map((app, appIndex)=>{\r\n                                    return  <Grid.Column\r\n                                        key={appIndex}\r\n                                        style={{minWidth:'180px'}}\r\n                                    > \r\n                                        <Link\r\n                                            to={`../app/${app.app_id}`}\r\n                                            style={{\r\n                                                display: 'inline-block',\r\n                                                textAlign: 'center',\r\n                                                padding: '14px'\r\n                                            }}\r\n                                        >\r\n                                            <AppItem info={app}/>\r\n                                        </Link>\r\n                                    </Grid.Column>\r\n                                })}\r\n                            </Grid>\r\n                        </div>\r\n                    })}\r\n                </>\r\n            }\r\n        </div>\r\n    );\r\n});\r\n\r\nexport default MainPage;","import React, { useEffect, useContext, useState } from 'react';\r\nimport { Icon, Header, List } from 'semantic-ui-react';\r\nimport { Link } from \"react-router-dom\";\r\nimport { Context } from \"../../index\";\r\n\r\nlet NotFound = ({type})=>{\r\n    let { category } = useContext(Context);\r\n    let [ pageText, setPageText ] = useState('');\r\n    useEffect(()=>{\r\n        let pageText;\r\n        switch(type){\r\n            case(\"app\"):{\r\n                pageText = 'Приложение не найдено!';\r\n                break;\r\n            }\r\n            case(\"category\"):{\r\n                pageText = 'Категиория не найдена!';\r\n                break;\r\n            }\r\n            default:{\r\n                pageText = 'Страница не найдена!';\r\n            }\r\n        }\r\n        setPageText(pageText);\r\n        document.title = `PwaBox - ${pageText}`;\r\n    },[type]);\r\n    return(\r\n        <div style={{textAlign : 'center'}}>\r\n            <div style={{margin : \"45px 0 45px 0\"}}>\r\n                <Header icon>\r\n                    <Icon name=\"find\" />\r\n                    {pageText}\r\n                </Header>\r\n            </div>\r\n            <List horizontal>\r\n                <List.Item as={Link} to=\"/\">Главная страница </List.Item>\r\n                <List.Item>|</List.Item>\r\n                {category._categoryList.map((cat, catIndex)=>{\r\n                    return <List.Item key={catIndex} as={Link} to={`../category/${cat.category_id}`}>{cat.category_name}</List.Item>\r\n                })}\r\n            </List>\r\n        </div>\r\n    )\r\n};\r\n\r\nexport default NotFound;","import React from \"react\";\r\nimport { List } from \"semantic-ui-react\";\r\n\r\nlet UnSupport = ()=>{\r\n    return (\r\n        <>\r\n            <p>\r\n                Твой браузер не поддерживает установку pwa приложений. Чтобы установить хоть что-то, начни пользоваться одним из браузеров ниже.\r\n            </p>\r\n            <List style={{marginTop : '15px'}}>\r\n                <List.Item>\r\n                    <a\r\n                        targer=\"_blank\"\r\n                        href=\"https://www.google.com/chrome/\"\r\n                    >\r\n                        Google Chrome\r\n                    </a>\r\n                </List.Item>\r\n                <List.Item>\r\n                    <a\r\n                        targer=\"_blank\"\r\n                        href=\"https://www.microsoft.com/edge\"\r\n                    >\r\n                        Microsoft Edge\r\n                    </a>\r\n                </List.Item>\r\n            </List>\r\n        </>\r\n    );\r\n}\r\n\r\nexport default UnSupport;","import React from \"react\";\r\nimport { Image, Header, Popup, Segment, Button, Container, Icon, Message } from \"semantic-ui-react\";\r\nimport { REACT_APP_API_STATIC, REACT_APP_MAIN_URL } from \"../../utils/consts\";\r\nimport \"./MobileAppView.css\";\r\n\r\nlet MobileView = ({appInfo, message, installLoading, user, installHendler, visitSite, CopyToClipboard, copy, setCopy})=>{\r\n    \r\n    return(\r\n        <Segment className=\"appPageSegment\" style={{maxWidth : \"500px\"}}>\r\n            <div\r\n                className=\"appPageMobileInnerBlock\"\r\n            >\r\n                <Header as=\"h1\">\r\n                    {appInfo.app_name}\r\n                </Header>\r\n                <div style={{color : 'rgba(0,0,0,.4)', fontSize:'1em', margin : '-12.5px 0 15px'}}>{appInfo.category_name}</div>\r\n                <Image\r\n                    size=\"small\"\r\n                    src={`${REACT_APP_MAIN_URL}/${REACT_APP_API_STATIC}app/${appInfo.app_id}/logo.png`}\r\n                    className=\"appMobileMainImage\"\r\n                />\r\n                {message.header &&\r\n                    <Message \r\n                        negative={message.type === 'negative'}\r\n                        className=\"messageBlock\"\r\n                    >\r\n                        <Message.Header>{message.header}</Message.Header>\r\n                        <p>{message.message}</p>\r\n                    </Message>\r\n                }\r\n                <div\r\n                    className=\"buttonMobileBlock\"\r\n                >\r\n                    <Button\r\n                        disabled={message.critical || installLoading || !user._appInstallSupport}\r\n                        className=\"installButton\"\r\n                        onClick={installHendler}\r\n                        loading={installLoading}\r\n                        primary\r\n                    >\r\n                        <Icon name='arrow alternate circle down outline'/>\r\n                    </Button>\r\n                    <Popup content='Перейти на сайт приложения' trigger={<Button\r\n                            className=\"secondaryMobilePageButton\"\r\n                            icon=\"external alternate\"\r\n                            onClick={visitSite}\r\n                        />}\r\n                    />\r\n                    <Popup content='Копировать ссылку на приложение' trigger={\r\n                        <CopyToClipboard\r\n                            text={copy.value}\r\n                            onCopy={() => setCopy({status : true})}\r\n                        >\r\n                            <Button\r\n                                className=\"secondaryMobilePageButton\"\r\n                                icon={copy.status ? \"checkmark\" : \"copy\"}\r\n                                disabled={copy.status}\r\n                            />\r\n                        </CopyToClipboard>\r\n                    } />\r\n                </div>\r\n                <Container\r\n                    className=\"descriptionBlock\"\r\n                >\r\n                    <p>{appInfo.app_description}</p>\r\n                </Container>\r\n            </div>\r\n        </Segment>\r\n    );\r\n};\r\n\r\nexport default MobileView;","import React from \"react\";\r\nimport { Image, Grid, Header, Popup, Segment, Button, Container, Icon, Message } from \"semantic-ui-react\";\r\nimport { REACT_APP_API_STATIC, REACT_APP_MAIN_URL } from \"../../utils/consts\";\r\nimport \"./DescAppView.css\";\r\n\r\nlet DescView = ({appInfo, message, installLoading, user, installHendler, visitSite, CopyToClipboard, copy, setCopy})=>{\r\n    \r\n    return(\r\n        <Segment className=\"appPageSegment\" style={{maxWidth : \"750px\"}}>\r\n            <Grid>\r\n                <Grid.Row>\r\n                    <Grid.Column width={5} centered=\"true\">\r\n                        <Image\r\n                            src={`${REACT_APP_MAIN_URL}/${REACT_APP_API_STATIC}app/${appInfo.app_id}/logo.png`}\r\n                            className=\"appDescMainImage\"\r\n                        />\r\n                        <Button\r\n                            disabled={message.critical || installLoading || !user._appInstallSupport}\r\n                            className=\"installDescButton\"\r\n                            onClick={installHendler}\r\n                            loading={installLoading}\r\n                            primary\r\n                        >\r\n                            <Icon name='arrow alternate circle down outline'/>\r\n                            <>Установить</>\r\n                        </Button>\r\n                    </Grid.Column>\r\n                    <Grid.Column width={11}>\r\n                        <div\r\n                            className=\"descHeaderBlock\"\r\n                        >\r\n                            <Header as=\"h1\">\r\n                                {appInfo.app_name}\r\n                            </Header>\r\n                            <div className=\"appPageCategory\">{appInfo.category_name}</div>\r\n                        </div>\r\n                        <div\r\n                            className=\"buttonDescBlock\"\r\n                        >\r\n                            <Popup content='Перейти на сайт приложения' trigger={<Button\r\n                                    className=\"secondaryDescPageButton\"\r\n                                    icon=\"external alternate\"\r\n                                    onClick={visitSite}\r\n                                />}\r\n                            />\r\n                            <Popup content='Копировать ссылку на приложение' trigger={\r\n                                <CopyToClipboard\r\n                                    text={copy.value}\r\n                                    onCopy={() => setCopy({status : true})}\r\n                                >\r\n                                    <Button\r\n                                        className=\"secondaryDescPageButton\"\r\n                                        icon={copy.status ? \"checkmark\" : \"copy\"}\r\n                                        disabled={copy.status}\r\n                                    />\r\n                                </CopyToClipboard>\r\n                            } />\r\n                        </div>\r\n                        {message.header &&\r\n                            <Message \r\n                                negative={message.type === 'negative'}\r\n                                className=\"messageBlock\"\r\n                            >\r\n                                <Message.Header>{message.header}</Message.Header>\r\n                                <p>{message.message}</p>\r\n                            </Message>\r\n                        }\r\n                        <Container\r\n                            className=\"descriptionBlock\"\r\n                        >\r\n                            <p>{appInfo.app_description}</p>\r\n                        </Container>\r\n                    </Grid.Column>\r\n                </Grid.Row>\r\n            </Grid>\r\n        </Segment>\r\n    );\r\n};\r\n\r\nexport default DescView;","import React, { useState, useContext, useEffect } from \"react\";\r\nimport { useParams } from \"react-router-dom\";\r\nimport { Context } from \"../../index\";\r\nimport { REACT_APP_API_STATIC, REACT_APP_MAIN_URL } from \"../../utils/consts\";\r\nimport { CopyToClipboard } from \"react-copy-to-clipboard\";\r\nimport UnSupport from \"../../components/UnSupport\";\r\nimport NotFound from \"../../pages/NotFound/NotFound\";\r\nimport AppLoading from \"../../components/AppLoading\";\r\nimport MobileAppView from \"../../components/MobileAppView/MobileAppView\";\r\nimport DescAppView from \"../../components/DescAppView/DescAppView\";\r\nimport \"./AppPage.css\";\r\n\r\nlet AppPage = ()=>{\r\n    let {user, app} = useContext(Context);\r\n    let {id} = useParams();\r\n    let [appInfo, setAppInfo] = useState(null);\r\n    let [pageLoading, setPageLoading] = useState(true);\r\n    let [installLoading, setInstallLoading] = useState(true);\r\n    let [pageWidth, setPageWidth] = useState(window.innerWidth);\r\n    let [copy, setCopy] = useState({value : \"\", status : false});\r\n    let [message, setMessage] = useState({});\r\n    const pageLink = window.location.href;\r\n    const pageScale = 767;\r\n    \r\n    useEffect(()=>{\r\n        let query = new URLSearchParams(window.location.search),\r\n            status = query.get('status'),\r\n            localApp;\r\n\r\n        app._appList.forEach(item =>{\r\n            let itemIndex = item.apps.findIndex(x=>x.app_id === id);\r\n            if(itemIndex !== -1) {\r\n                localApp = item.apps[itemIndex];\r\n                setAppInfo(localApp);\r\n            }\r\n        });\r\n        if(localApp){\r\n            if(((status === \"'redirect'\") || localStorage.getItem('redirectApplictaion') === localApp.app_id) && user._appInstalled) window.location.replace(localApp.app_link);\r\n            else {\r\n                document.title = `PwaBox - ${localApp.app_name}`;\r\n                window.addEventListener('resize',()=>{\r\n                    setPageWidth(window.innerWidth);\r\n                });\r\n                setCopy({value : pageLink, status : false});\r\n                if(!user._appInstallSupport) {\r\n                    messageHandler('info','Нет поддержки!', <UnSupport/>, true)\r\n                } else {\r\n                    //TESTING!!!!!!!!\r\n                    setTimeout(()=>{\r\n                        user.regManifest(`${REACT_APP_MAIN_URL}/${REACT_APP_API_STATIC}app/${localApp.app_id}/site.webmanifest`);\r\n                        setInstallLoading(false);\r\n                    },999);\r\n                    /*window.onappinstalled = ()=>{\r\n                        console.log('111');\r\n                    }\r\n                    window.addEventListener('appinstalled', (evt) => {\r\n                        console.log('a2hs installed');\r\n                    });\r\n                    navigator.getInstalledRelatedApps().then(relatedApps=>{\r\n                        relatedApps.forEach((app) => {\r\n                            console.log(app.id, app.platform, app.url);\r\n                        });\r\n                    });*/\r\n                    //TESTING!!!!!!!!\r\n                }\r\n                setPageLoading(false);\r\n            }\r\n        }\r\n    },[app, id, pageLink, user]);\r\n\r\n    let messageHandler = (type, header, message, critical)=>{\r\n        setMessage({type, header, message, critical});\r\n    }\r\n\r\n    let installHendler = async ()=>{\r\n        try{\r\n            setInstallLoading(true);\r\n            if(typeof user._appEvent.prompt === 'function'){\r\n                user._appEvent.prompt();\r\n                let { outcome } = await user._appEvent.userChoice;\r\n                if(outcome === 'accepted'){\r\n                    localStorage.setItem('redirectApplictaion', appInfo.app_id);\r\n                    //window.open(pageLink,'_blank');\r\n                    window.location.replace(`${pageLink}?status='redirect'`);\r\n                }\r\n            } else messageHandler('negative', 'Произошла ошибка!', 'При установке произошла ошибка, повтори попытку через некоторое время.', true);\r\n            setInstallLoading(false);\r\n        } catch (e) {\r\n            messageHandler('negative', 'Произошла ошибка!', 'При установке произошла ошибка, повтори попытку через некоторое время.', true);\r\n        } \r\n    }\r\n\r\n    let visitSite = ()=>{\r\n        return window.open(appInfo.app_link, '_blank');\r\n    }\r\n\r\n    let renderLogic = ()=>{\r\n        if(pageLoading) return <AppLoading/>\r\n        else {\r\n            if(!appInfo) return <NotFound type=\"app\"/>\r\n            else{\r\n                if(pageWidth > pageScale) return <DescAppView\r\n                    appInfo={appInfo}\r\n                    message={message}\r\n                    installLoading={installLoading}\r\n                    user={user}\r\n                    installHendler={installHendler}\r\n                    copy={copy}\r\n                    visitSite={visitSite}\r\n                    CopyToClipboard={CopyToClipboard}\r\n                    setCopy={setCopy}\r\n                />\r\n                else return <MobileAppView\r\n                    appInfo={appInfo}\r\n                    message={message}\r\n                    installLoading={installLoading}\r\n                    user={user}\r\n                    installHendler={installHendler}\r\n                    copy={copy}\r\n                    visitSite={visitSite}\r\n                    CopyToClipboard={CopyToClipboard}\r\n                    setCopy={setCopy}\r\n                />\r\n            }\r\n        }\r\n    }\r\n    \r\n    return (\r\n        renderLogic()\r\n    )\r\n}\r\n\r\nexport default AppPage;","import React from \"react\";\r\nimport { List, Image } from 'semantic-ui-react';\r\nimport { Link } from 'react-router-dom';\r\n\r\nlet CategoryListItem = ({data, index})=>{\r\n    return(\r\n        <List.Item>\r\n            <Link\r\n                as=\"div\"\r\n                to={`../app/${data.app_id}`}\r\n                style={{display : 'flex'}}\r\n            >\r\n                <Image\r\n                    size=\"tiny\"\r\n                    src={`../assets/app/${data.app_id}/logo.png`}\r\n                    style={{borderRadius: \".28571429rem\"}}\r\n                />\r\n                <List.Content style={{ paddingLeft : '8px'}}>\r\n                    <List.Header>{data.app_name}</List.Header>\r\n                    #{index+1}\r\n                </List.Content>\r\n            </Link>\r\n        </List.Item>\r\n    );\r\n}\r\nexport default CategoryListItem;","import MainPage from \"./pages/MainPage/MainPage\";\r\nimport NotFound from \"./pages/NotFound/NotFound\";\r\nimport AppPage from \"./pages/AppPage/AppPage\";\r\nimport CategoryPage from \"./pages/CategoryPage/CategpryPage\";\r\nimport { MAIN_ROUTE, ALL_ROUTE, APP_PAGE, CATEGORY_PAGE } from \"./utils/consts\";\r\n\r\nexport let authRoutes = [\r\n\r\n];\r\n\r\nexport let publicRoutes = [\r\n    {\r\n        path : MAIN_ROUTE,\r\n        Component : MainPage\r\n    },\r\n    {\r\n        path : APP_PAGE,\r\n        Component : AppPage\r\n    },\r\n    {\r\n        path : CATEGORY_PAGE,\r\n        Component : CategoryPage\r\n    },\r\n    {\r\n        path : ALL_ROUTE,\r\n        Component : NotFound\r\n    }\r\n];","import React, { useEffect, useState, useContext } from \"react\";\r\nimport { useParams } from \"react-router-dom\";\r\nimport { Segment, List, Header } from \"semantic-ui-react\";\r\nimport { Context } from \"../../index\";\r\nimport AppLoading from \"../../components/AppLoading\";\r\nimport CategoryListItem from \"../../components/CategoryListItem\";\r\nimport NotFound from \"../../pages/NotFound/NotFound\";\r\n\r\nimport \"./CategoryPage.css\";\r\n\r\nlet CategoryPage = ()=>{\r\n\r\n    let { app } = useContext(Context);\r\n    let { id } = useParams();\r\n    let [ categoryList, setCategoryList ] = useState({});\r\n    let [ pageLoading, setPageLoading ] = useState(true);\r\n    let [ noFound, setNoFoundCategory ] = useState(false);\r\n\r\n    useEffect(()=>{\r\n        let categoryIndex = app._appList.findIndex(x=>x.category_id === id);\r\n        if(categoryIndex !== -1){\r\n            document.title = `PwaBox - Категоря ${categoryList.category_name}`;\r\n            setCategoryList(app._appList[categoryIndex]);\r\n        } else setNoFoundCategory(true);\r\n        setPageLoading(false);\r\n    },[app, categoryList, id]);\r\n\r\n    return(\r\n        <>\r\n            {pageLoading && <AppLoading/>}\r\n            {!pageLoading &&\r\n                <Segment className=\"mainCategoryBlock\">\r\n                    {noFound && <NotFound type=\"category\"/>}\r\n                    {!noFound &&\r\n                        <>\r\n                            <Header>\r\n                                {categoryList.category_name}\r\n                            </Header>\r\n                            <List divided verticalAlign='middle' size='large'>\r\n                                {categoryList.apps.map((item, index)=>{\r\n                                    return <CategoryListItem key={index} data={item} index={index}/>\r\n                                })}\r\n                            </List>\r\n                        </>\r\n                    }\r\n                </Segment>\r\n            }\r\n        </>\r\n    );\r\n}\r\nexport default CategoryPage;","import React from \"react\";\r\nimport { Routes ,Route } from \"react-router-dom\";\r\nimport { publicRoutes } from \"../routes\";\r\n\r\nlet AppRouter = ()=>{\r\n    return(\r\n        <Routes>\r\n            {publicRoutes.map(({path, Component}, index)=>{\r\n                return <Route key={index} path={path} element={<Component/>} exact/>\r\n            })}\r\n        </Routes>\r\n    )\r\n};\r\n\r\nexport default AppRouter;","import React from \"react\";\r\n//import { useContext } from \"react\"; \r\nimport { Link } from \"react-router-dom\";\r\nimport { Menu, Image } from \"semantic-ui-react\";\r\nimport { MAIN_ROUTE, REACT_APP_API_STATIC, REACT_APP_MAIN_URL } from \"../utils/consts\";\r\n//import { Context } from '../index';\r\n\r\nlet NavBar = ()=>{\r\n    /*const options = [\r\n        { key: 1, flag : 'ru', text: 'Русский', value: true },\r\n        { key: 2, flag : 'uk', text: 'English', value: false }\r\n    ];\r\n    let { user } = useContext(Context);*/\r\n    //let [appInstalled, setAppStatus] = useState(false);\r\n    //let [installProcess, setInstallProcess] = useState(false);\r\n    //let [buttonText, setButtonText] = useState('Установить PwaBox');\r\n\r\n    /*let installHendler = async ()=>{\r\n        \r\n        if(app._appEvent){\r\n            setInstallProcess(true);\r\n            app._appEvent.prompt();\r\n            let {outcome} = await app._appEvent.userChoice;\r\n            if(outcome === 'accepted') setAppStatus(true); \r\n            setInstallProcess(false);\r\n        } else {\r\n            setButtonText('Ошибка');\r\n        }\r\n    }*/\r\n\r\n    return(\r\n        <Menu style={{maxWidth : \"750px\", margin : \"0 auto\",}}>\r\n            <Link to={MAIN_ROUTE} style={{padding : \"8px\", margin : \"0 auto\"}}>\r\n                <Image\r\n                    src={`${REACT_APP_MAIN_URL}/${REACT_APP_API_STATIC}/logo.png`}      height=\"35px\"\r\n                />\r\n            </Link>\r\n            {/*\r\n                <Menu.Item position='right'>\r\n                    <Dropdown\r\n                        text='Язык'\r\n                        options={options}\r\n                        simple\r\n                        item \r\n                        value={user._userLanguadge}\r\n                    />\r\n                </Menu.Item>\r\n            */}\r\n        </Menu>\r\n    )\r\n};\r\n\r\nexport default NavBar;","import React from \"react\";\r\nimport { Icon } from \"semantic-ui-react\";\r\n\r\nlet Footer = ()=>{\r\n    \r\n    return(\r\n        <div style={{\r\n            margin:'45px auto',\r\n            maxWidth : '750px',\r\n            width : '100%',\r\n            padding : '15px'\r\n        }}>\r\n            <div style={{\r\n                \"display\": \"inline-block\"\r\n            }}>\r\n                <a\r\n                    href=\"https://mobile.twitter.com/i1fxx\"\r\n                    target=\"_blank\"\r\n                    rel=\"noopener noreferrer\"\r\n                    style={{\"marginRight\" : \"10px\"}}\r\n                >\r\n                    <Icon\r\n                        name='twitter'\r\n                        size='big'\r\n                    />\r\n                </a>\r\n            </div>\r\n            <div style={{\r\n                \"display\": \"inline-block\",\r\n                \"float\" : \"right\"\r\n            }}>\r\n                 pwabox © {new Date().getFullYear()}\r\n            </div>\r\n      </div>\r\n    )\r\n};\r\n\r\nexport default Footer;","import React, { useEffect, useContext, useState } from \"react\";\r\nimport { BrowserRouter as Router } from \"react-router-dom\";\r\nimport { Context } from \"./index\";\r\nimport { osName, browserName } from \"react-device-detect\";\r\nimport AppRouter from \"./components/AppRouter\";\r\nimport NavBar from \"./components/NavBar\";\r\nimport Footer from \"./components/Footer\";\r\nimport AppLoading from \"./components/AppLoading\";\r\nimport \"./App.css\";\r\nimport \"semantic-ui-css/semantic.min.css\";\r\n//import \"react-image-gallery/styles/css/image-gallery.css\";\r\n\r\nlet App = ()=> {\r\n\r\n  let {user} = useContext(Context);\r\n  let [loading, setLoading] = useState(true);\r\n\r\n  useEffect(()=>{\r\n    let acceptList = ['Linux/Chrome', 'Windows/Chrome','Windows/Edge', 'Mac OS/Chrome', 'Mac OS/Edge', 'iOS/Mobile Safari', 'Android/Chrome', 'Android/Samsung Browser'];\r\n    user.setSupport(acceptList.indexOf(osName+'/'+browserName) === -1 ? false : true);\r\n    user.setStatus(window.matchMedia('(display-mode: minimal-ui)').matches);\r\n    user.setUserLanguadge((navigator.language || navigator.userLanguage).split('-')[0]);\r\n    setLoading(false);\r\n  },[user]);\r\n  \r\n  return (\r\n    <Router>\r\n      {loading && <AppLoading/>}\r\n      {!loading && \r\n        <>\r\n          <NavBar/>\r\n          <AppRouter/>\r\n          <Footer/>\r\n        </>\r\n      }\r\n    </Router>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","import {makeAutoObservable} from \"mobx\";\r\nexport default class UserStore{\r\n    constructor(){\r\n        this._appEvent = {};\r\n        this._appInstalled = false;\r\n        this._appInstallSupport = false;\r\n        this._userLanguadge = \"ru\";\r\n        makeAutoObservable(this);\r\n    }\r\n    setStatus(e){\r\n        this._appInstalled = e;\r\n    }\r\n    setSupport(e){\r\n        this._appInstallSupport = e;\r\n    }\r\n    setUserLanguadge(e){\r\n        this._userLanguadge = e;\r\n    }\r\n    regManifest(url){\r\n        let listener = (e)=>{\r\n            e.preventDefault();\r\n            this._appEvent = e;\r\n        }\r\n        window.removeEventListener(\"beforeinstallprompt\", listener, false);\r\n        document.getElementById(\"manifestLink\").href = url;\r\n        window.addEventListener(\"beforeinstallprompt\", listener, false);\r\n    }\r\n};","import { makeAutoObservable } from \"mobx\";\r\nimport apps from \"../data/appList.json\";\r\nimport categories from \"../data/categoryList.json\";\r\n\r\nexport default class AppStore{\r\n    constructor(){\r\n        this._appList = prettyList();\r\n        makeAutoObservable(this);\r\n    }\r\n};\r\nlet prettyList = ()=>{\r\n    categories.forEach(item=>{\r\n        item.apps.forEach((app, index)=>{\r\n            apps.forEach(storeApp=>{\r\n                if(app === storeApp.app_id){\r\n                    storeApp['category_name'] = item['category_name'];\r\n                    item.apps[index] = storeApp;\r\n                }\r\n            })\r\n        });\r\n    });\r\n    return categories;\r\n}","import React, { createContext } from \"react\";\r\nimport ReactDOM from \"react-dom/client\";\r\nimport App from \"./App\";\r\nimport UserStore from \"./store/UserStore\";\r\nimport AppStore from \"./store/AppStore\";\r\nimport CategoryStore from \"./store/CategoryStore\";\r\nimport * as serviceWorkerRegistration from \"./serviceWorkerRegistration\";\r\n\r\nexport let Context = createContext(null);\r\nconst root = ReactDOM.createRoot(document.getElementById('root'));\r\n\r\nroot.render(\r\n  <Context.Provider value={{\r\n    user : new UserStore(),\r\n    app : new AppStore(),\r\n    category : new CategoryStore()\r\n  }}>\r\n    <App />\r\n  </Context.Provider>\r\n);\r\nserviceWorkerRegistration.register();","\r\nexport function register(config) {\r\n\r\n  window.addEventListener('load', () => {\r\n    \r\n    const swUrl = `${process.env.PUBLIC_URL}/worker.js`;\r\n\r\n    registerValidSW(swUrl, config);\r\n  });\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then((registration) => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://cra.link/PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch((error) => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready\r\n      .then((registration) => {\r\n        registration.unregister();\r\n      })\r\n      .catch((error) => {\r\n        console.error(error.message);\r\n      });\r\n  }\r\n}","import { makeAutoObservable } from \"mobx\";\r\nimport categories from \"../data/categoryList.json\";\r\n\r\nexport default class CategoryStore{\r\n    constructor(){\r\n        this._categoryList = categories;\r\n        makeAutoObservable(this);\r\n    }\r\n};"],"sourceRoot":""}