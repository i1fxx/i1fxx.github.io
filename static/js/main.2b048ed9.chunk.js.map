{"version":3,"sources":["components/AppLoading.js","utils/consts.js","components/AppItem.js","pages/MainPage/MainPage.js","pages/NotFound/NotFound.js","components/UnSupport.js","pages/AppPage/AppPage.js","components/CategoryListItem.js","routes.js","pages/CategoryPage/CategpryPage.js","components/AppRouter.js","components/NavBar.js","components/Footer.js","App.js","store/UserStore.js","store/AppStore.js","serviceWorkerRegistration.js","reportWebVitals.js","index.js","store/CategoryStore.js"],"names":["AppLoading","react_default","a","createElement","Dimmer","active","inverted","Loader","inline","REACT_APP_MAIN_URL","AppItem","_ref","info","app_name","app_id","Card","style","width","link","Image","src","concat","wrapped","ui","Content","textAlign","Header","height","overflow","textOverflow","whiteSpace","MainPage","observer","_useState","useState","_useState2","Object","slicedToArray","appList","setAppList","_useContext","useContext","Context","app","user","_useState3","_useState4","loading","setPageLoading","useEffect","document","title","regManifest","_appList","className","components_AppLoading","Fragment","react_router_dom","to","slice","map","data","index","key","as","category_name","apps","length","category_id","Icon","name","Grid","columns","appIndex","Column","minWidth","display","padding","components_AppItem","NotFound","type","category","pageText","setPageText","margin","icon","List","horizontal","Item","Link","_categoryList","cat","catIndex","UnSupport","marginTop","targer","href","AppPage","id","useParams","appInfo","setAppInfo","pageLoading","_useState5","_useState6","installLoading","setInstallLoading","_useState7","window","innerWidth","_useState8","pageWidth","setPageWidth","_useState9","value","status","_useState10","copy","setCopy","_useState11","_useState12","message","setMessage","pageLink","location","localApp","URLSearchParams","search","get","forEach","item","itemIndex","findIndex","x","screenShots","parseInt","screens","i","push","original","thumbnail","originalHeight","localStorage","getItem","_appInstalled","addEventListener","_appInstallSupport","messageHandler","components_UnSupport","replace","app_link","header","critical","installHendler","asyncToGenerator","_regeneratorRuntime","mark","_callee","wrap","_context","prev","next","_appEvent","prompt","userChoice","sent","outcome","setItem","open","t0","stop","apply","this","arguments","Segment","pages_NotFound_NotFound","color","fontSize","size","Message","negative","Button","disabled","onClick","primary","Popup","content","trigger","react_copy_to_clipboard_lib","text","onCopy","Container","app_description","image_gallery_default","lazyLoad","showThumbnails","items","showFullscreenButton","showPlayButton","showBullets","showNav","autoPlay","CategoryListItem","paddingLeft","publicRoutes","path","Component","categoryList","setCategoryList","noFound","setNoFoundCategory","categoryIndex","divided","verticalAlign","components_CategoryListItem","AppRouter","react_router","element","exact","NavBar","Menu","maxWidth","Footer","target","rel","marginRight","float","Date","getFullYear","App","setLoading","setSupport","indexOf","osName","browserName","setStatus","matchMedia","matches","setUserLanguadge","navigator","language","userLanguage","split","components_NavBar","components_AppRouter","components_Footer","UserStore","classCallCheck","_userLanguadge","makeAutoObservable","e","url","_this","listener","preventDefault","removeEventListener","getElementById","prettyList","categories","storeApp","isLocalhost","Boolean","hostname","match","registerValidSW","swUrl","config","serviceWorker","register","then","registration","onupdatefound","installingWorker","installing","onstatechange","state","controller","console","log","onUpdate","onSuccess","catch","error","reportWebVitals","onPerfEntry","Function","__webpack_require__","bind","getCLS","getFID","getFCP","getLCP","getTTFB","d","__webpack_exports__","createContext","ReactDOM","createRoot","render","Provider","AppStore","CategoryStore","src_App_0","URL","process","origin","fetch","headers","Service-Worker","response","contentType","ready","unregister","reload","checkValidServiceWorker","serviceWorkerRegistration"],"mappings":"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","file":"static/js/main.2b048ed9.chunk.js","sourcesContent":["import React from \"react\";\nimport { Dimmer, Loader } from \"semantic-ui-react\";\n\nlet AppLoading = ()=>{\n    return(\n        <Dimmer active={true} inverted>\n            <Loader inverted inline='centered' />\n        </Dimmer>\n    );\n};\n\nexport default AppLoading;","export const MAIN_ROUTE = \"/\";\nexport const APP_PAGE = \"/app/:id\";\nexport const ALL_ROUTE = \"*\";\nexport const CATEGORY_PAGE = \"/category/:id\";\nexport const REACT_APP_API_URL = \"http://localhost:7000/\";\nexport const REACT_APP_MAIN_URL = \"https://i1fxx.github.io/\"\nexport const REACT_APP_API_STATIC = \"assets/\";","import React from \"react\";\nimport { Card, Image } from 'semantic-ui-react';\nimport { REACT_APP_API_STATIC, REACT_APP_MAIN_URL } from '../utils/consts';\n\nlet AppItem = ({info})=>{\n    let {app_name, app_id} = info;\n    return(\n        <Card style={{width : '150px'}} link={true}>\n            <Image src={`${REACT_APP_MAIN_URL}/${REACT_APP_API_STATIC}app/${app_id}/logo.png`} wrapped ui={false}/>\n            <Card.Content textAlign={'center'}>\n                <Card.Header style={{height : '23.15px', overflow : 'hidden', textOverflow : 'ellipsis',  whiteSpace: 'nowrap'}}>{app_name}</Card.Header>\n            </Card.Content>\n        </Card>\n    );\n};\n\nexport default AppItem;","import React, { useEffect, useState, useContext } from \"react\";\nimport { Icon, Grid, Header } from \"semantic-ui-react\";\nimport { observer } from \"mobx-react-lite\";\nimport { Link } from \"react-router-dom\";\nimport { Context } from \"../../index\";\nimport AppLoading from \"../../components/AppLoading\";\nimport AppItem from \"../../components/AppItem\";\nimport \"./MainPage.css\";\n\nlet MainPage = observer(()=>{\n    let [ appList, setAppList ] = useState([]);\n    let { app, user } = useContext(Context);\n    let [ loading, setPageLoading ] = useState(true);\n    \n\n    useEffect(()=>{\n        document.title = \"PwaBox - Главная\";\n        user.regManifest('../site.webmanifest');\n        setAppList(app._appList);\n        setPageLoading(false);\n    },[app, user]);\n\n    return(\n        <div className=\"mainPageSegment\">\n            {loading && <AppLoading/>}\n            {!loading &&\n                <>\n                    <Link\n                        to=\"../category/top-10\"\n                    >\n                        <div\n                            className=\"mainPageImage\"\n                        >\n                            Топ 10\n                        </div>\n                    </Link>\n                    {appList.slice(1).map((data, index)=>{\n                        return <div key={index} className=\"appsList\">\n                            <Header\n                                className=\"categoryHeader\"\n                                as=\"h2\"\n                            >\n                                {data.category_name}\n                            </Header>\n                            {data.apps.length > 4 &&\n                                <div className=\"allLink\">\n                                    <Link\n                                        to={`../category/${data.category_id}`}\n                                    >\n                                        Все&nbsp;\n                                        <Icon name=\"arrow right\"/>\n                                    </Link>\n                                </div>\n                            }\n                            <Grid\n                                className=\"categoryAppList\"\n                                columns={4}\n                            >\n                                {data.apps.slice(0, 4).map((app, appIndex)=>{\n                                    return  <Grid.Column\n                                        key={appIndex}\n                                        style={{minWidth:'180px'}}\n                                    > \n                                        <Link\n                                            to={`../app/${app.app_id}`}\n                                            style={{\n                                                display: 'inline-block',\n                                                textAlign: 'center',\n                                                padding: '14px'\n                                            }}\n                                        >\n                                            <AppItem info={app}/>\n                                        </Link>\n                                    </Grid.Column>\n                                })}\n                            </Grid>\n                        </div>\n                    })}\n                </>\n            }\n        </div>\n    );\n});\n\nexport default MainPage;","import React, { useEffect, useContext, useState } from 'react';\nimport { Icon, Header, List } from 'semantic-ui-react';\nimport { Link } from \"react-router-dom\";\nimport { Context } from \"../../index\";\n\nlet NotFound = ({type})=>{\n    let { category } = useContext(Context);\n    let [ pageText, setPageText ] = useState('');\n    useEffect(()=>{\n        let pageText;\n        switch(type){\n            case(\"app\"):{\n                pageText = 'Приложение не найдено!';\n                break;\n            }\n            case(\"category\"):{\n                pageText = 'Категиория не найдена!';\n                break;\n            }\n            default:{\n                pageText = 'Страница не найдена!';\n            }\n        }\n        setPageText(pageText);\n        document.title = `PwaBox - ${pageText}`;\n    },[type]);\n    return(\n        <div style={{textAlign : 'center'}}>\n            <div style={{margin : \"45px 0 45px 0\"}}>\n                <Header icon>\n                    <Icon name=\"find\" />\n                    {pageText}\n                </Header>\n            </div>\n            <List horizontal>\n                <List.Item as={Link} to=\"/\">Главная страница </List.Item>\n                <List.Item>|</List.Item>\n                {category._categoryList.map((cat, catIndex)=>{\n                    return <List.Item key={catIndex} as={Link} to={`../category/${cat.category_id}`}>{cat.category_name}</List.Item>\n                })}\n            </List>\n        </div>\n    )\n};\n\nexport default NotFound;","import React from \"react\";\nimport { List } from \"semantic-ui-react\";\n\nlet UnSupport = ()=>{\n    return (\n        <>\n            <p>\n                Твой браузер не поддерживает установку pwa приложений. Чтобы установить хоть что-то, начни пользоваться одним из браузеров ниже.\n            </p>\n            <List style={{marginTop : '15px'}}>\n                <List.Item>\n                    <a\n                        targer=\"_blank\"\n                        href=\"https://www.google.com/chrome/\"\n                    >\n                        Google Chrome\n                    </a>\n                </List.Item>\n                <List.Item>\n                    <a\n                        targer=\"_blank\"\n                        href=\"https://www.microsoft.com/edge\"\n                    >\n                        Microsoft Edge\n                    </a>\n                </List.Item>\n            </List>\n        </>\n    );\n}\n\nexport default UnSupport;","import React, { useState, useContext, useEffect } from \"react\";\nimport { useParams } from \"react-router-dom\";\nimport { Context } from \"../../index\";\nimport { Image, Header, Popup, Segment, Button, Container, Icon, Message } from \"semantic-ui-react\";\nimport { REACT_APP_API_STATIC, REACT_APP_MAIN_URL } from \"../../utils/consts\";\nimport { CopyToClipboard } from \"react-copy-to-clipboard\";\nimport UnSupport from \"../../components/UnSupport\";\nimport NotFound from \"../../pages/NotFound/NotFound\";\nimport AppLoading from \"../../components/AppLoading\";\nimport ImageGallery from \"react-image-gallery\";\nimport \"./AppPage.css\";\nimport \"../../../node_modules/react-image-gallery/styles/css/image-gallery.css\";\n\nlet AppPage = ()=>{\n    let {user, app} = useContext(Context);\n    let {id} = useParams();\n    let [appInfo, setAppInfo] = useState(null);\n    let [pageLoading, setPageLoading] = useState(true);\n    let [installLoading, setInstallLoading] = useState(false);\n    let [pageWidth, setPageWidth] = useState(window.innerWidth);\n    let [copy, setCopy] = useState({value : \"\", status : false});\n    let [message, setMessage] = useState({});\n    const pageLink = window.location.href;\n    \n    useEffect(()=>{\n        let query = new URLSearchParams(window.location.search),\n            status = query.get('status'),\n            localApp;\n\n        app._appList.forEach(item =>{\n            let itemIndex = item.apps.findIndex(x=>x.app_id === id);\n            if(itemIndex !== -1) {\n                localApp = item.apps[itemIndex];\n                if(localApp.screenShots && parseInt(localApp.screenShots) >0){\n                    let screens = [];\n                    for(let i = 1;i<=parseInt(localApp.screenShots);i++){\n                        screens.push({\n                            original : `${REACT_APP_MAIN_URL}/${REACT_APP_API_STATIC}app/${localApp.app_id}/screen${i}.png`,\n                            thumbnail : `${REACT_APP_MAIN_URL}/${REACT_APP_API_STATIC}app/${localApp.app_id}/screen${i}.png`,\n                            originalHeight : '390px'\n                        });\n                    }\n                    localApp.screenShots = screens;\n                }\n                setAppInfo(localApp);\n            }\n        });\n\n        if(localApp){\n            if(((status === \"'redirect'\") || localStorage.getItem('redirectApplictaion') === localApp.app_id) && user._appInstalled) window.location.replace(localApp.app_link);\n            else {\n                document.title = `PwaBox - ${localApp.app_name}`;\n                window.addEventListener('resize',()=>{\n                    setPageWidth(window.innerWidth);\n                });\n                setCopy({value : pageLink, status : false});\n                if(!user._appInstallSupport) {\n                    messageHandler('info','Нет поддержки!', <UnSupport/>, true)\n                } else {\n                    //TESTING!!!!!!!!\n                    user.regManifest(`${REACT_APP_MAIN_URL}/${REACT_APP_API_STATIC}app/${localApp.app_id}/site.webmanifest`);\n                    /*window.onappinstalled = ()=>{\n                        console.log('111');\n                    }\n                    window.addEventListener('appinstalled', (evt) => {\n                        console.log('a2hs installed');\n                    });\n                    navigator.getInstalledRelatedApps().then(relatedApps=>{\n                        relatedApps.forEach((app) => {\n                            console.log(app.id, app.platform, app.url);\n                        });\n                    });*/\n                    //TESTING!!!!!!!!\n                }\n                setPageLoading(false);\n            }\n        }\n    },[app, id, pageLink, user]);\n\n    let messageHandler = (type, header, message, critical)=>{\n        setMessage({type, header, message, critical});\n    }\n\n    let installHendler = async ()=>{\n        try{\n            setInstallLoading(true);\n            if(typeof user._appEvent.prompt === 'function'){\n                user._appEvent.prompt();\n                let { outcome } = await user._appEvent.userChoice;\n                if(outcome === 'accepted'){\n                    localStorage.setItem('redirectApplictaion', appInfo.app_id);\n                    window.location.open(`${pageLink}?status='redirect'`);\n                    //window.open(pageLink,'_blank');\n                }\n            } else messageHandler('negative', 'Произошла ошибка!', 'При установке произошла ошибка, повтори попытку через некоторое время.', true);\n            setInstallLoading(false);\n        } catch (e) {\n            messageHandler('negative', 'Произошла ошибка!', 'При установке произошла ошибка, повтори попытку через некоторое время.', true);\n        }\n    }\n\n    let visitSite = ()=>{\n        return window.open(appInfo.app_link, '_blank');\n    }\n    \n    return (\n        <Segment className=\"appPageSegment\">\n            {pageLoading && <AppLoading/>}\n            {!pageLoading &&\n                <>\n                    {!appInfo && <NotFound type=\"app\"/>}\n                    {appInfo && \n                        <div\n                            className=\"appPageInnerBlock\"\n                        >\n                            <Header as=\"h1\">\n                                {appInfo.app_name}\n                            </Header>\n                            <div style={{color : 'rgba(0,0,0,.4)', fontSize:'1em', margin : '-12.5px 0 15px'}}>{appInfo.category_name}</div>\n                            <Image\n                                size=\"small\"\n                                src={`${REACT_APP_MAIN_URL}/${REACT_APP_API_STATIC}app/${appInfo.app_id}/logo.png`}\n                                className=\"appMainImage\"\n                            />\n                            {message.header &&\n                                <Message \n                                    negative={message.type === 'negative'}\n                                    className=\"messageBlock\"\n                                >\n                                    <Message.Header>{message.header}</Message.Header>\n                                    <p>{message.message}</p>\n                                </Message>\n                            }\n                            <div\n                                className=\"buttonBlock\"\n                            >\n                                <Button\n                                    disabled={message.critical || installLoading || !user._appInstallSupport}\n                                    className=\"installButton\"\n                                    onClick={installHendler}\n                                    loading={installLoading}\n                                    primary\n                                >\n                                    <Icon name='arrow alternate circle down outline'/>\n                                    {pageWidth > 767 &&<>Установить</>}\n                                </Button>\n                                <Popup content='Перейти на сайт приложения' trigger={<Button\n                                        className=\"secondaryPageButton\"\n                                        icon=\"external alternate\"\n                                        onClick={visitSite}\n                                    />}\n                                />\n                                <Popup content='Копировать ссылку на приложение' trigger={\n                                    <CopyToClipboard\n                                        text={copy.value}\n                                        onCopy={() => setCopy({status : true})}\n                                    >\n                                        <Button\n                                            className=\"secondaryPageButton\"\n                                            icon={copy.status ? \"checkmark\" : \"copy\"}\n                                            disabled={copy.status}\n                                        />\n                                    </CopyToClipboard>\n                                } />\n                            </div>\n                            <Container\n                                className=\"descriptionBlock\"\n                            >\n                                <p>{appInfo.app_description}</p>\n                            </Container>\n                            {appInfo.screenShots &&\n                                <div\n                                    style={{marginTop : '15px'}}\n                                >\n                                    <ImageGallery\n                                        lazyLoad={true}\n                                        showThumbnails={false}\n                                        items={appInfo.screenShots}\n                                        showFullscreenButton={false}\n                                        showPlayButton={false}\n                                        showBullets={true}\n                                        showNav={false}\n                                        autoPlay={true}\n                                    />\n                                </div>\n                            }\n                        </div>\n                    }\n                </>\n            }\n        </Segment>\n    )\n}\n\nexport default AppPage;","import React from \"react\";\nimport { List, Image } from 'semantic-ui-react';\nimport { Link } from 'react-router-dom';\n\nlet CategoryListItem = ({data, index})=>{\n    return(\n        <List.Item>\n            <Link\n                as=\"div\"\n                to={`../app/${data.app_id}`}\n                style={{display : 'flex'}}\n            >\n                <Image\n                    size=\"tiny\"\n                    src={`../assets/app/${data.app_id}/logo.png`}\n                />\n                <List.Content style={{ paddingLeft : '8px'}}>\n                    <List.Header>{data.app_name}</List.Header>\n                    #{index+1}\n                </List.Content>\n            </Link>\n        </List.Item>\n    );\n}\nexport default CategoryListItem;","import MainPage from \"./pages/MainPage/MainPage\";\nimport NotFound from \"./pages/NotFound/NotFound\";\nimport AppPage from \"./pages/AppPage/AppPage\";\nimport CategoryPage from \"./pages/CategoryPage/CategpryPage\";\nimport { MAIN_ROUTE, ALL_ROUTE, APP_PAGE, CATEGORY_PAGE } from \"./utils/consts\";\n\nexport let authRoutes = [\n\n];\n\nexport let publicRoutes = [\n    {\n        path : MAIN_ROUTE,\n        Component : MainPage\n    },\n    {\n        path : APP_PAGE,\n        Component : AppPage\n    },\n    {\n        path : CATEGORY_PAGE,\n        Component : CategoryPage\n    },\n    {\n        path : ALL_ROUTE,\n        Component : NotFound\n    }\n];","import React, { useEffect, useState, useContext } from \"react\";\nimport { useParams } from \"react-router-dom\";\nimport { Segment, List, Header } from \"semantic-ui-react\";\nimport { Context } from \"../../index\";\nimport AppLoading from \"../../components/AppLoading\";\nimport CategoryListItem from \"../../components/CategoryListItem\";\nimport NotFound from \"../../pages/NotFound/NotFound\";\n\nimport \"./CategoryPage.css\";\n\nlet CategoryPage = ()=>{\n\n    let { app } = useContext(Context);\n    let { id } = useParams();\n    let [ categoryList, setCategoryList ] = useState({});\n    let [ pageLoading, setPageLoading ] = useState(true);\n    let [ noFound, setNoFoundCategory ] = useState(false);\n\n    useEffect(()=>{\n        let categoryIndex = app._appList.findIndex(x=>x.category_id === id);\n        if(categoryIndex !== -1){\n            document.title = `PwaBox - Категоря ${categoryList.category_name}`;\n            setCategoryList(app._appList[categoryIndex]);\n        } else setNoFoundCategory(true);\n        setPageLoading(false);\n    },[app, categoryList, id]);\n\n    return(\n        <>\n            {pageLoading && <AppLoading/>}\n            {!pageLoading &&\n                <Segment className=\"mainCategoryBlock\">\n                    {noFound && <NotFound type=\"category\"/>}\n                    {!noFound &&\n                        <>\n                            <Header>\n                                {categoryList.category_name}\n                            </Header>\n                            <List divided verticalAlign='middle' size='large'>\n                                {categoryList.apps.map((item, index)=>{\n                                    return <CategoryListItem key={index} data={item} index={index}/>\n                                })}\n                            </List>\n                        </>\n                    }\n                </Segment>\n            }\n        </>\n    );\n}\nexport default CategoryPage;","import React from \"react\";\nimport { Routes ,Route } from \"react-router-dom\";\nimport { publicRoutes } from \"../routes\";\n\nlet AppRouter = ()=>{\n    return(\n        <Routes>\n            {publicRoutes.map(({path, Component}, index)=>{\n                return <Route key={index} path={path} element={<Component/>} exact/>\n            })}\n        </Routes>\n    )\n};\n\nexport default AppRouter;","import React from \"react\";\n//import { useContext } from \"react\"; \nimport { Link } from \"react-router-dom\";\nimport { Menu, Image } from \"semantic-ui-react\";\nimport { MAIN_ROUTE, REACT_APP_API_STATIC, REACT_APP_MAIN_URL } from \"../utils/consts\";\n//import { Context } from '../index';\n\nlet NavBar = ()=>{\n    /*const options = [\n        { key: 1, flag : 'ru', text: 'Русский', value: true },\n        { key: 2, flag : 'uk', text: 'English', value: false }\n    ];\n    let { user } = useContext(Context);*/\n    //let [appInstalled, setAppStatus] = useState(false);\n    //let [installProcess, setInstallProcess] = useState(false);\n    //let [buttonText, setButtonText] = useState('Установить PwaBox');\n\n    /*let installHendler = async ()=>{\n        \n        if(app._appEvent){\n            setInstallProcess(true);\n            app._appEvent.prompt();\n            let {outcome} = await app._appEvent.userChoice;\n            if(outcome === 'accepted') setAppStatus(true); \n            setInstallProcess(false);\n        } else {\n            setButtonText('Ошибка');\n        }\n    }*/\n\n    return(\n        <Menu style={{maxWidth : \"750px\", margin : \"0 auto\",}}>\n            <Link to={MAIN_ROUTE} style={{padding : \"8px\", margin : \"0 auto\"}}>\n                <Image\n                    src={`${REACT_APP_MAIN_URL}/${REACT_APP_API_STATIC}/logo.png`}      height=\"35px\"\n                />\n            </Link>\n            {/*\n                <Menu.Item position='right'>\n                    <Dropdown\n                        text='Язык'\n                        options={options}\n                        simple\n                        item \n                        value={user._userLanguadge}\n                    />\n                </Menu.Item>\n            */}\n        </Menu>\n    )\n};\n\nexport default NavBar;","import React from \"react\";\nimport { Icon } from \"semantic-ui-react\";\n\nlet Footer = ()=>{\n    \n    return(\n        <div style={{\n            margin:'45px auto',\n            maxWidth : '750px',\n            width : '100%',\n            padding : '15px'\n        }}>\n            <div style={{\n                \"display\": \"inline-block\"\n            }}>\n                <a\n                    href=\"https://mobile.twitter.com/i1fxx\"\n                    target=\"_blank\"\n                    rel=\"noopener noreferrer\"\n                    style={{\"marginRight\" : \"10px\"}}\n                >\n                    <Icon\n                        name='twitter'\n                        size='big'\n                    />\n                </a>\n            </div>\n            <div style={{\n                \"display\": \"inline-block\",\n                \"float\" : \"right\"\n            }}>\n                 pwabox © {new Date().getFullYear()}\n            </div>\n      </div>\n    )\n};\n\nexport default Footer;","import React, { useEffect, useContext, useState } from \"react\";\nimport { BrowserRouter as Router } from \"react-router-dom\";\nimport { Context } from \"./index\";\nimport { osName, browserName } from \"react-device-detect\";\nimport AppRouter from \"./components/AppRouter\";\nimport NavBar from \"./components/NavBar\";\nimport Footer from \"./components/Footer\";\nimport AppLoading from \"./components/AppLoading\";\nimport \"./App.css\";\n\nlet App = ()=> {\n\n  let {user} = useContext(Context);\n  let [loading, setLoading] = useState(true);\n\n  useEffect(()=>{\n    let acceptList = ['Linux/Chrome', 'Windows/Chrome','Windows/Edge', 'Mac OS/Chrome', 'Mac OS/Edge', 'iOS/Mobile Safari', 'Android/Chrome', 'Android/Samsung Browser'];\n    user.setSupport(acceptList.indexOf(osName+'/'+browserName) === -1 ? false : true);\n    user.setStatus(window.matchMedia('(display-mode: standalone)').matches);\n    user.setUserLanguadge((navigator.language || navigator.userLanguage).split('-')[0]);\n    setLoading(false);\n  },[user]);\n  \n  return (\n    <Router>\n      {loading && <AppLoading/>}\n      {!loading && \n        <>\n          <NavBar/>\n          <AppRouter/>\n          <Footer/>\n        </>\n      }\n    </Router>\n  );\n}\n\nexport default App;\n","import {makeAutoObservable} from \"mobx\";\nexport default class UserStore{\n    constructor(){\n        this._appEvent = {};\n        this._appInstalled = false;\n        this._appInstallSupport = false;\n        this._userLanguadge = \"ru\";\n        makeAutoObservable(this);\n    }\n    setStatus(e){\n        this._appInstalled = e;\n    }\n    setSupport(e){\n        this._appInstallSupport = e;\n    }\n    setUserLanguadge(e){\n        this._userLanguadge = e;\n    }\n    regManifest(url){\n        let listener = (e)=>{\n            e.preventDefault();\n            this._appEvent = e;\n        }\n        window.removeEventListener(\"beforeinstallprompt\", listener, false);\n        document.getElementById(\"manifestLink\").href = url;\n        window.addEventListener(\"beforeinstallprompt\", listener, false);\n    }\n};","import { makeAutoObservable } from \"mobx\";\nimport apps from \"../data/appList.json\";\nimport categories from \"../data/categoryList.json\";\n\nexport default class AppStore{\n    constructor(){\n        this._appList = prettyList();\n        makeAutoObservable(this);\n    }\n};\nlet prettyList = ()=>{\n    categories.forEach(item=>{\n        item.apps.forEach((app, index)=>{\n            apps.forEach(storeApp=>{\n                if(app === storeApp.app_id){\n                    storeApp['category_name'] = item['category_name'];\n                    item.apps[index] = storeApp;\n                }\n            })\n        });\n    });\n    return categories;\n}","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://cra.link/PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(/^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/)\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://cra.link/PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then((registration) => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://cra.link/PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch((error) => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then((response) => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then((registration) => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log('No internet connection found. App is running in offline mode.');\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then((registration) => {\n        registration.unregister();\n      })\n      .catch((error) => {\n        console.error(error.message);\n      });\n  }\n}\n","const reportWebVitals = (onPerfEntry) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React, { createContext } from \"react\";\nimport ReactDOM from \"react-dom/client\";\nimport App from \"./App\";\nimport UserStore from \"./store/UserStore\";\nimport AppStore from \"./store/AppStore\";\nimport CategoryStore from \"./store/CategoryStore\";\nimport * as serviceWorkerRegistration from \"./serviceWorkerRegistration\";\nimport reportWebVitals from \"./reportWebVitals\";\n\nexport let Context = createContext(null);\nconst root = ReactDOM.createRoot(document.getElementById('root'));\n\nroot.render(\n  <Context.Provider value={{\n    user : new UserStore(),\n    app : new AppStore(),\n    category : new CategoryStore()\n  }}>\n    <App />\n  </Context.Provider>\n);\nserviceWorkerRegistration.register();\nreportWebVitals();","import { makeAutoObservable } from \"mobx\";\nimport categories from \"../data/categoryList.json\";\n\nexport default class CategoryStore{\n    constructor(){\n        this._categoryList = categories;\n        makeAutoObservable(this);\n    }\n};"],"sourceRoot":""}